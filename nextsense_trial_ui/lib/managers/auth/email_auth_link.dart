import 'package:firebase_auth/firebase_auth.dart';
import 'package:logging/logging.dart';
import 'package:nextsense_trial_ui/ui/navigation.dart';
import 'package:nextsense_trial_ui/utils/android_logger.dart';

/// Email link generated by Firebase that can be used to authenticate the user.
/// There is also an application specific url target which can be suedd to know which operation the
/// user wants to do, and an email parameter to identify the user.
class EmailAuthLink {
  static const _emailLinkParam = 'email';

  final CustomLogPrinter _logger = CustomLogPrinter('EmailAuthLink');
  final String authLink;
  late bool isValid;
  late String email;
  late UrlTarget urlTarget;

  EmailAuthLink(this.authLink) {
    _parseAndValidateLink();
  }

  bool get isAuthLink => false;

  _parseAndValidateLink() {
    // Check that it is a valid Firebase auth link.
    bool isAuthLink = FirebaseAuth.instance.isSignInWithEmailLink(authLink);
    if (!isAuthLink) {
      isValid = false;
      return;
    }

    // Check that the email parameter was appended.
    Uri uri = Uri.parse(authLink);
    String? email = uri.queryParameters[_emailLinkParam];
    if (email == null) {
      _logger.log(Level.WARNING,
          "Received an email link with no $_emailLinkParam parameter, cannot process it.");
      isValid = false;
      return;
    }
    this.email = email;

    // Check that the email link targets a valid internal target.
    UrlTarget urlTarget = UrlTarget.create(uri.toString());
    if (urlTarget == UrlTarget.unknown) {
      _logger.log(Level.WARNING, 'Unknown url target: $uri');
      isValid = false;
      return;
    }
    this.urlTarget = urlTarget;

    isValid = true;
  }
}